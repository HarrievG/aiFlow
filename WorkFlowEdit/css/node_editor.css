/* --- Node Editor Styles (from original FlowEdit) --- */
#node-editor-container {
	/* Inherits border, margin-top, height, overflow, position */
	/* Background handled by #node-editor itself */
	border: 1px solid #444; /* Darker border */
	border-radius: 4px;
	box-sizing: border-box;
}

	#node-editor-container.hidden {
		display: none;
	}

#node-editor {
	flex-grow: 1;
	overflow: hidden; /* Viewport */
	background-color: #222; /* Darker background */
	cursor: grab;
	position: absolute; /* Position relative to #node-editor-container */
	top: 0;
	left: 0;
	right: 0;
	bottom: 0; /* Fill container */
	/* Subtle grid pattern */
	background-image: linear-gradient(rgba(255, 255, 255, 0.05) 2px, transparent 2px), linear-gradient(90deg, rgba(255, 255, 255, 0.05) 2px, transparent 2px);
	background-size: 100px 100px; /* Base grid size */
	background-position: 0 0; /* Initial position */
}

	#node-editor.panning {
		cursor: grabbing;
	}

/* --- SVG Layer for Links --- */
#link-svg-layer {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none; /* Allow clicks to pass through to workspace/nodes */
	z-index: 1; /* Below nodes (which have implicit higher z-index or explicit) */
	overflow: visible; /* Allow paths to draw outside initial bounds if needed */
	transform-origin: 0 0;
}

	#link-svg-layer path {
		stroke-width: 2px;
		stroke: #bbbbbb; /* Light gray for links */
		fill: none;
		transition: stroke 0.15s ease-in-out; /* Smooth transition for stroke color */
	}

		#link-svg-layer path.dragging-link-temp {
			stroke: #007bff; /* Accent color for dragging link */
			stroke-dasharray: 5, 5;
		}

		#link-svg-layer path.reconnecting-link {
			opacity: 0.6; /* Slightly faded */
			stroke: #f39c12; /* Orange/Yellow accent for reconnecting */
			stroke-dasharray: 5, 5;
		}
		/* Style for linked paths (optional, could be bolder/different color) */
		#link-svg-layer path.linked {
			 stroke-width: 3px;
			 stroke: #0f0;
		}

#workspace {
	position: absolute; /* Relative for node positioning */
	top: 0;
	left: 0;
	width: 500%; /* Large virtual canvas */
	height: 500%;
	background-color: #333; /* Darker base for grid */
	/*Subtle grid pattern */
	background-image: linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
	background-size: 20px 20px;
	border: 1px solid #444;
	box-sizing: border-box;
	transform-origin: 0 0;
	z-index: 0;
}

/* --- Node Styling --- */
.node {
	position: absolute;
	background-color: #2c3e50; /* Deep blue-gray */
	color: #e0e0e0; /* Light gray text */
	border: 1px solid #444; /* Darker border */
	border-radius: 6px; /* Slightly more rounded corners */
	min-width: 180px; /* Increased min-width */
	cursor: default;
	user-select: none;
	box-shadow: 0 3px 8px rgba(0,0,0,0.4); /* More prominent shadow */
	display: flex; /* Use flex for layout */
	flex-direction: column; /* Default vertical stack */
	font-size: 0.9em;
	z-index: 10; /* Ensure nodes are above links */
	box-sizing: border-box;
	transition: transform 0.1s ease-out, box-shadow 0.2s ease-in-out, background-color 0.2s ease-in-out; /* Smooth transitions */
}

	.node.dragging {
		cursor: default;
		opacity: 0.9; /* Less opacity change */
		z-index: 1000;
		box-shadow: 0 5px 15px rgba(0,0,0,0.8); /* Larger shadow when dragging */
	}

.node-header {
	font-weight: 600; /* Semi-bold */
	padding: 10px; /* Increased padding */
	background-color: rgba(0, 0, 0, 0.3); /* Slightly darker header */
	border-bottom: 1px solid rgba(255, 255, 255, 0.1);
	text-align: center;
	cursor: grab;
	border-radius: 5px 5px 0 0; /* Rounded top corners */
	color: #ffffff; /* White header text */
	font-size: 1em;
}

	.node-header:hover {
		background-color: rgba(0, 0, 0, 0.25); /* Slightly darker header */
	}

.node-content {
	display: flex;
	padding: 8px; /* Padding around inputs/outputs */
	flex-grow: 1;
}

.node-inputs, .node-outputs {
	display: flex;
	flex-direction: column; /* Stack sockets vertically by default */
	padding: 8px 0; /* Spacing */
}

.node-inputs {
	align-items: flex-start; /* Align input sockets left */
	margin-right: auto; /* Push outputs to the right in horizontal */
}

.node-outputs {
	align-items: flex-end; /* Align output sockets right */
	margin-left: auto; /* Push inputs to the left in horizontal */
}

.node-socket {
	display: flex;
	align-items: center;
	margin: 6px 0; /* Vertical spacing between sockets */
	position: relative; /* For positioning the socket point */
}

.socket-point {
	width: 14px; /* Slightly larger */
	height: 14px;
	background-color: #bbbbbb; /* Light gray default */
	border: 1px solid #555; /* Darker border */
	border-radius: 50%; /* Circle */
	cursor: crosshair; /* Indicate connectability */
	position: relative;
	z-index: 11; /* Above node background */
	box-shadow: 0 1px 3px rgba(0,0,0,0.3); /* Subtle shadow */
	transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, transform 0.1s ease-out;
}

	.socket-point:hover {
		background-color: #ffffff; /* White on hover */
		border-color: #999;
		transform: scale(1.1); /* Slight grow effect */
	}

	.socket-point.input {
		background-color: #2ecc71; /* Green for inputs */
		border-color: #27ae60;
	}

		.socket-point.input:hover {
			background-color: #39d480; /* Lighter green on hover */
		}

	.socket-point.output {
		background-color: #e74c3c; /* Red/Orange for outputs */
		border-color: #c0392b;
	}

		.socket-point.output:hover {
			background-color: #ec6f62; /* Lighter red/orange on hover */
		}

	.socket-point.connected {
		/* Optional: style for connected sockets */
		/* border-color: #007bff; */ /* Blue border */
		/* box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); */ /* Blue glow */
	}

	.socket-point.dragging-start {
		box-shadow: 0 0 8px rgba(0, 123, 255, 0.8); /* Strong glow when starting drag */
	}


.socket-label {
	font-size: 0.85em;
	color: #ccc; /* Muted text color */
	margin: 0 5px; /* Space between point and label */
}


/* --- Horizontal Flow Specific Styles --- */
.node.flow-horizontal .node-content {
	flex-direction: row; /* Inputs and outputs side-by-side */
	justify-content: space-between; /* Push inputs/outputs apart */
	align-items: center; /* Vertically center content */
}

.node.flow-horizontal .node-inputs {
	flex-direction: column; /* Stack input sockets vertically */
	align-items: flex-start; /* Align input sockets left */
	margin-right: 15px; /* More space between inputs and outputs */
	padding: 0; /* Remove vertical padding */
}

.node.flow-horizontal .node-outputs {
	flex-direction: column; /* Stack output sockets vertically */
	align-items: flex-end; /* Align output sockets right */
	margin-left: 15px;
	padding: 0; /* Remove vertical padding */
}

.node.flow-horizontal .node-socket {
	flex-direction: row; /* Label and point side-by-side */
	margin: 6px 0; /* Vertical spacing between sockets */
}

.node.flow-horizontal .node-inputs .socket-point {
	order: -1; /* Point on left */
	margin-right: 8px; /* Space between point and label */
	margin-left: -12px; /* Pull point onto the edge for better connection */
	transform: none; /* Reset vertical transform */
}

.node.flow-horizontal .node-outputs .socket-point {
	order: 1; /* Point on right */
	margin-left: 8px; /* Space between point and label */
	margin-right: -12px; /* Pull point onto the edge */
	transform: none; /* Reset vertical transform */
}


/* --- Vertical Flow Specific Styles --- */
.node.flow-vertical {
	/* Default node layout is already column */
}

	.node.flow-vertical .node-content {
		flex-direction: column; /* Ensure content stacks vertically */
		align-items: stretch; /* Allow inputs/outputs to take width */
	}

	.node.flow-vertical .node-inputs,
	.node.flow-vertical .node-outputs {
		flex-direction: row; /* Sockets side-by-side */
		justify-content: space-around; /* Distribute sockets horizontally */
		width: 100%; /* Take full width */
		padding: 0 8px; /* Padding inside */
		margin: 0; /* Remove default margins */
	}

	.node.flow-vertical .node-inputs {
		margin-bottom: 8px;
	}
	/* Space between inputs and outputs sections */
	.node.flow-vertical .node-outputs {
		margin-top: 8px;
	}

	.node.flow-vertical .node-socket {
		flex-direction: column; /* Stack point and label vertically */
		margin: 0 6px; /* Horizontal spacing between sockets */
		align-items: center; /* Center point/label vertically within socket */
	}

	.node.flow-vertical .node-inputs .socket-point {
		order: -1; /* Point on top */
		margin-bottom: 8px; /* Space below point */
		margin-top: -12px; /* Pull point onto the edge */
		transform: none; /* Reset horizontal transform */
	}

	.node.flow-vertical .node-outputs .socket-point {
		order: 1; /* Point on bottom */
		margin-top: 8px; /* Space above point */
		margin-bottom: -12px; /* Pull point onto the edge */
		transform: none; /* Reset horizontal transform */
	}


/* --- Selection Rectangle --- */
#selection-rect {
	position: absolute;
	border: 1px dashed #007bff; /* Blue dashed border */
	background-color: rgba(0, 123, 255, 0.15); /* Semi-transparent blue */
	display: none; /* Hidden by default */
	pointer-events: none; /* Doesn't interfere with mouse events */
	z-index: 100; /* Above nodes and links, below controls */
	transform-origin: 0 0; /* Consistent with workspace/svg */
}

/* --- Selected Node Style --- */
.node.selected {
	outline: none; /* Remove default outline */
	border-color: #007bff; /* Blue border */
	box-shadow: 0 0 12px rgba(0, 123, 255, 0.7); /* Blue glow */
	background-color: #34495e; /* Slightly different background or same */
}

	/* Ensure selected nodes are visually prominent when dragging */
	.node.selected.dragging {
		z-index: 1001; /* Slightly higher than normal dragging */
	}

/* Change cursor during reconnection */
#node-editor.reconnecting {
	cursor: alias;
}
